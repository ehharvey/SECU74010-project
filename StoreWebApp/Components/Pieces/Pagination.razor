@using StoreWebApp.Models;
@inject Models.IProductRepository ProductRepository


<div class="pagination">
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @if (PageNumber > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="/products/@(PageNumber - 1)">Previous</a>
                </li>
            }

            @for (int i = Math.Max(1, PageNumber - PeekPages); i <= Math.Min(TotalPages, PageNumber + PeekPages); i++)
            {
                <li class="page-item @(i == PageNumber ? "active" : "")">
                    <a class="page-link" href="/products/@i">@i</a>
                </li>
            }

            @if (PageNumber < TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="/products/@(PageNumber + 1)">Next</a>
                </li>
            }
        </ul>
    </nav>
</div>



@code
{
    [Parameter]
    public int PageNumber { get; set; }

    [Parameter]
    public int PageSize { get; set; }

    public int TotalPages { get; set; }

    public int PeekPages { get; set; } = 5;

    protected override void OnParametersSet()
    {
        TotalPages = (int)Math.Ceiling(ProductRepository.GetNumberOfProducts() / (double)PageSize);
    }
}