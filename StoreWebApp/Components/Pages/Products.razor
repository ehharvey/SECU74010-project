@page "/products/{PageNum:int}/{Filter?}"
@using StoreWebApp.Components.Pieces
@inject Models.IProductRepository ProductRepository
@inject NavigationManager navManager
<PageTitle>Products</PageTitle>

<h1>Products</h1>

<form asp-action="get" method="get">
	<p>
		Search: <input type="text" asp-for="Filter" />
		<input type="submit" value="Filter" formmethod="get"/>
	</p>
</form>

@if (products != null)
{
    <!-- Flex container for product cards -->
    <div class="d-flex flex-wrap">
        @foreach (var product in products)
        {
            <ProductCard Product=@product />
        }
    </div>

    <StoreWebApp.Components.Pieces.Pagination PageNumber=@PageNum PageSize=20 />
}
else
{
	<p>No products found.</p>
}

@code {
	private IEnumerable<Models.Product>? products;
	[Parameter] public int PageNum { get; set; }

	[Parameter]
	public string? Filter { get; set; }

	protected override async Task OnInitializedAsync()
	{
		Console.WriteLine("\ninitial load\n");
		try
		{
			products = await ProductRepository.GetProductsAsync(PageNum, 20, Filter);
		}
		catch (Exception ex)
		{
			Console.WriteLine(ex.Message);
			products = null;
		}
	}

	public async Task OnGet(string FilterVal)
	{
		Console.WriteLine("\n onGet " + FilterVal);
		navManager.NavigateTo(string.Format("/0/{0}", FilterVal));
	}
}